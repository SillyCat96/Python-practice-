import sys

# Используем eval для создания чисел динамически
# Это заставляет Python создавать новый объект каждый раз,
# потому что он не может предсказать его во время компиляции
e = eval("1")
f = eval("1")

print(f"e = {e}, f = {f}. e is f: {e is f}")
print(f"id(e): {id(e)}")
print(f"id(f): {id(f)}")

# Используем eval для создания чисел динамически
# Это заставляет Python создавать новый объект каждый раз,
# потому что он не может предсказать его во время компиляции
e = eval("257")
f = eval("257")

print(f"e = {e}, f = {f}. e is f: {e is f}")
print(f"id(e): {id(e)}")
print(f"id(f): {id(f)}")

# Для интереса, давайте проверим, что в обычном случае вы все еще можете видеть True
# Если вы запустите этот блок отдельно, он может дать True из-за оптимизации компилятора

def get_257_a():
    return 257

def get_257_b():
    return 257

e = get_257_a()
f = get_257_b()
print(e is f) # Очень вероятно, что False