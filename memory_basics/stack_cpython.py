def func_c():
    """Самая вложенная функция."""
    print("    [Начало func_c]") # Индикатор начала функции C
    x = 10
    print(f"    Внутри func_c: локальная переменная x = {x}")
    print("    [Конец func_c]") # Индикатор конца функции C
    return x

def func_b():
    """Промежуточная функция."""
    print("  [Начало func_b]") # Индикатор начала функции B
    print("  Внутри func_b: вызываем func_c...")
    y = func_c() # Вызов func_c
    print(f"  Внутри func_b: func_c вернула {y}")
    print("  [Конец func_b]") # Индикатор конца функции B
    return y + 1

def func_a():
    """Начальная функция цепочки."""
    print("[Начало func_a]") # Индикатор начала функции A
    print("Внутри func_a: вызываем func_b...")
    z = func_b() # Вызов func_b
    print(f"Внутри func_a: func_b вернула {z}")
    print("[Конец func_a]") # Индикатор конца функции A
    return z * 2

# --- Основная часть программы ---
print("--- Запуск основной программы ---")
result = func_a() # Запускаем всю цепочку
print(f"--- Основная программа: func_a вернула {result} ---")
print("--- Основная программа завершена ---")