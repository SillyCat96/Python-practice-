# Класс, представляющий узел связного списка
class Node:
    def __init__(self, value=0, next=None):
        # Инициализация узла: value — значение узла, next — ссылка на следующий узел
        self.value = value  # Сохраняем значение узла
        self.next = next    # Ссылка на следующий узел, по умолчанию None (конец списка)

# Класс, представляющий связный список
class LinkedList:
    def __init__(self):
        # Инициализация пустого связного списка
        self.head = None  # Начальный узел (голова) списка, по умолчанию None

    # Метод для добавления нового узла в конец связного списка
    def append(self, value):
        # Проверяем, пустой ли список (нет начального узла)
        if not self.head:
            # Если список пуст, создаём первый узел и назначаем его головой
            self.head = Node(value)
        else:
            # Если список не пуст, находим последний узел
            current = self.head
            # Проходим по списку, пока не найдём узел, у которого ссылка next равна None (последний узел)
            while current.next:
                current = current.next
            # Создаём новый узел и добавляем его в конец списка
            current.next = Node(value)

    # Метод для вывода содержимого списка
    def print_list(self):
        # Начинаем с головы списка
        current = self.head
        # Проходим по всем узлам списка
        while current:
            # Печатаем значение текущего узла
            print(current.value, end=" -> ")
            # Переходим к следующему узлу
            current = current.next
        # Когда список закончится, выводим "None" (конец списка)
        print("None")

# Создание экземпляра связного списка
linked_list = LinkedList()

# Добавляем элементы в связный список
linked_list.append(1)  # Добавляем узел со значением 1
linked_list.append(2)  # Добавляем узел со значением 2
linked_list.append(3)  # Добавляем узел со значением 3
linked_list.append(4)  # Добавляем узел со значением 4

# Выводим содержимое связного списка
linked_list.print_list()  # Ожидаемый вывод: 1 -> 2 -> 3 -> 4 -> None
