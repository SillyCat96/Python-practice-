def is_valid(s):
    # Словарь с парами закрывающих и открывающих скобок
    mapping = {')': '(', ']': '[', '}': '{'}
    
    # Инициализация пустого стека
    stack = []
    
    # Счётчик для шагов
    step_counter = 1
    
    # Проход по каждому символу строки
    for char in s:
        print(f"Шаг {step_counter}: Обрабатываем символ '{char}'")
        
        # Если символ — это закрывающая скобка
        if char in mapping:
            # Если стек не пуст, извлекаем верхний элемент. Если пуст — присваиваем '#'
            top_element = stack.pop() if stack else '#'
            print(f"  Попытка сопоставить закрывающую скобку '{char}' с открывающей скобкой '{top_element}'")
            print(f"  Значение top_element на этом шаге: '{top_element}'")
            
            # Проверяем, соответствует ли скобка
            if mapping[char] != top_element:
                print(f"  Скобка '{char}' не соответствует ожидаемой '{top_element}'. Ошибка!")
                return False
        else:
            # Если символ — это открывающая скобка, добавляем её в стек
            stack.append(char)
            print(f"  Открывающая скобка '{char}' добавлена в стек")
        
        # Вывод текущего состояния стека
        print(f"  Текущее содержимое стека: {stack}")
        step_counter += 1
    
    # Если в конце работы стек пуст, значит, все скобки корректно расставлены
    return not stack

# Пример использования
s = "{[()]}"
result = is_valid(s)
print(f"\nРезультат: {'Корректные скобки' if result else 'Ошибка в скобках'}")
